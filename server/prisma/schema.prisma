generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model Ticker { 
  id          Int       @id @default(autoincrement()) 
  cmcId       Int         @unique
  name        String
  cmcticker   String?
  krakenticker String? 

  cmcLatests  CmcLatest[]  // one-to-many relation
  krakenCandle KrakenCandle[] // one-to-many relation
  
}

model CmcLatest {  
  id          Int     @id @default(autoincrement()) 
  cmcId    Int
  price       Float
  p1h_change  Float
  p24h_change Float
  p7d_change  Float
  p30d_change Float

  gainers Gainers[] // one-to-many relation

  ticker      Ticker  @relation(fields: [cmcId], references: [cmcId], onDelete: Cascade)
 
}

model KrakenCandle {
  id    Int    @id @default(autoincrement())
  timestamp Int
  tickerId Int  
  price Float
  volume Float
  ema21 Float
  ema50 Float
  ema200 Float
  rsi14 Float
  last1change Float
  last77change Float
  last144change Float
  last288change Float
  trigger Boolean

  tickerRel Ticker @relation(fields: [tickerId], references: [id], onDelete: Cascade)
  @@unique([timestamp, tickerId])

}

model Gainers { 
  id          Int       @id @default(autoincrement()) 
  cmcId       Int
  candleId    Int @unique


   cmcLatests  CmcLatest  @relation(fields: [candleId], references: [id], onDelete: Cascade)
}

model Losers { 
  id          Int       @id @default(autoincrement()) 
  cmcId       Int
}
